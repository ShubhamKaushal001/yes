(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{KIKF:function(e,t,n){"use strict";n.r(t);var a=n("mrSG"),o=n("CcnG"),l=n("Ip0R"),i=n("4GxJ"),c=n("Vx+w"),r=n("BHnd"),d=n("4epT"),s=n("OkvK"),m=n("oZWX"),p=n("Io7v"),u=function(){function e(e,t,n,a){this.cdr=e,this.modalService=t,this.apiservice=n,this.noti=a,this.displayedColumns=["id","from","to","game","date","winner","action"],this.dataSource=new r.a(h),this.errors=["",null,void 0],this.url=c.a.USER_IMAGE_URL,this.UserList=[],this.pages=[],this.getUserList()}return e.prototype.ngAfterViewInit=function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort},e.prototype.applyFilter=function(e){e=(e=e.trim()).toLowerCase(),this.dataSource.filter=e},e.prototype.ngOnInit=function(){},e.prototype.open=function(e,t,n){this.deleteId=t,this.index=n,this.modalService.open(e).result.then(function(e){})},e.prototype.getUserList=function(){var e=this;this.apiservice.post("Admin_fetchAllmatches",{},"").subscribe(function(t){var n;n=t,console.log("response",n),e.UserList=n.matches,e.dataSource=new r.a(n.matches),e.dataSource.paginator=e.paginator,e.dataSource.sort=e.sort,e.cdr.markForCheck()},function(e){})},e.prototype.updateUserStatus=function(e){var t=this;this.apiservice.post("Admin_removematch",{id:this.deleteId,status:e},"").subscribe(function(n){var a;console.log(a),(a=n).status?(0==e?(t.dataSource.data.splice(t.index,1),t.cdr.markForCheck(),t.dataSource.paginator=t.paginator,t.dataSource.sort=t.sort):t.dataSource.data[t.index].status=e,t.noti.popup(0==e?"Match is deleted":1==e?"User is activated":"User is inactivated","OK","3000")):t.noti.popup(a.msg,"OK","3000")},function(e){})},e.prototype.updateStatus=function(e,t,n){this.deleteId=t,this.index=n,this.updateUserStatus(1==e.checked?1:2)},e.ctorParameters=function(){return[{type:o.ChangeDetectorRef},{type:i.b},{type:m.a},{type:p.a}]},a.c([Object(o.ViewChild)(d.a,{static:!0}),a.f("design:type",d.a)],e.prototype,"paginator",void 0),a.c([Object(o.ViewChild)(s.a,{static:!0}),a.f("design:type",s.a)],e.prototype,"sort",void 0),e=a.c([Object(o.Component)({selector:"kt-match",template:n("VLXH"),styles:[n("Wved")]}),a.f("design:paramtypes",[o.ChangeDetectorRef,i.b,m.a,p.a])],e)}(),h=[],f=n("ZYCi"),g=n("gIcY"),b=n("graX"),v=n("UodH"),w=n("kWGw"),C=n("mVsa"),k=n("uGex"),x=n("b716"),y=n("4tE/"),D=n("9It4"),S=n("SMsm"),_=n("Wf4p"),A=n("Z+uX"),I=n("jQLj"),H=n("FVSy"),U=n("de3e"),L=n("Blfk"),j=n("vARd"),O=n("jlZm"),F=n("La40"),M=n("v9Dh"),R=n("o3x0");n.d(t,"MatchModule",function(){return V});var V=function(){function e(){}return e=a.c([Object(o.NgModule)({declarations:[u],imports:[l.CommonModule,i.c,g.e,g.j,b.a,v.a,w.a,C.a,k.a,x.b,r.b,y.a,D.a,S.a,_.k,A.a,I.a,H.a,d.b,s.b,U.a,L.a,j.c,O.a,F.a,M.a,R.c,f.i.forChild([{path:"",component:u}])]})],e)}()},VLXH:function(e,t){e.exports='<div class="kt-portlet">\n\t<div class="kt-portlet__head">\n    <div class="kt-portlet__head-label">\n      <h3 class="kt-portlet__head-title"><span>All Matches</span></h3>\n    </div>\n  </div>\n\n  <div class="kt-portlet__body pt-0">\n \n    <mat-form-field class="mat-form-field-infix">\n     <input matInput (keyup)="applyFilter($event.target.value)" placeholder="Search">\n   </mat-form-field>\n   <div class="table-responsive"> \n    <div class="mat-table__wrapper "> \n     <mat-table #table [dataSource]="dataSource">\n\n      <ng-container matColumnDef="id">\n        <mat-header-cell *matHeaderCellDef  > Id </mat-header-cell>\n        <mat-cell *matCellDef="let element; index as i" > {{i+1}} </mat-cell>\n      </ng-container>\n  \n     \n  \n      \x3c!-- Name Column --\x3e\n      <ng-container matColumnDef="from">\n        <mat-header-cell *matHeaderCellDef  > From </mat-header-cell>\n        <mat-cell *matCellDef="let element" > {{element.from}} </mat-cell>\n      </ng-container>\n      \x3c!-- Email Column --\x3e\n      <ng-container matColumnDef="to">\n        <mat-header-cell *matHeaderCellDef> To</mat-header-cell>\n        <mat-cell *matCellDef="let element"> {{element.to}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef="game">\n        <mat-header-cell *matHeaderCellDef  > Game</mat-header-cell>\n        <mat-cell *matCellDef="let element"   > {{element.game}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef="winner">\n        <mat-header-cell *matHeaderCellDef  > Winner</mat-header-cell>\n        <mat-cell *matCellDef="let element"   > {{element.winner}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef="date">\n        <mat-header-cell *matHeaderCellDef  > Date</mat-header-cell>\n        <mat-cell *matCellDef="let element"   > {{element.date}} </mat-cell>\n      </ng-container>\n      \x3c!-- Action Column --\x3e\n      <ng-container matColumnDef="action">\n        <mat-header-cell *matHeaderCellDef width20 > Action </mat-header-cell>\n        <mat-cell *matCellDef="let element; index as i" width20 >  \n          <button (click)="open(content, element._id, i)" mat-icon-button color="danger" matTooltip="Delete" type="button">\n            <mat-icon>delete</mat-icon>\n           </button>\n          </mat-cell>\n         </ng-container>\n  \n         <mat-header-row *matHeaderRowDef="displayedColumns"></mat-header-row>\n         <mat-row *matRowDef="let row; columns: displayedColumns;"></mat-row>\n         </mat-table>\n    \n     <mat-paginator #paginator [pageSize]="10" [pageSizeOptions]="[5, 10, 20]" [showFirstLastButtons]="true"> </mat-paginator>\n    </div>\n  </div>\n  <div class="kt-section">\n    <div class="kt-section__content">\n     <ng-template #content let-c="close" let-d="dismiss">\n      <div class="modal-body">\n         <button type="button" class="close close-modal" aria-label="Close" (click)="d(\'Cross click\')"> <span aria-hidden="true">&times;</span> </button>\n         <div class="text-center modal-inner">\n          <i class="flaticon2-close-cross fa-4x close-icon"></i>\n          <h4>Are You Sure ?</h4>\n          <p class="mb-0">Are you sure you want to delete this records? This process cannot be undone</p>\n         </div>\n      </div>\n      <div class="pt-0 pb-4 modal-footer no-border justify-content-center">\n         <button type="button" class="btn btn-secondary" (click)="c(\'Close click\')">Cancel</button>\n         <button type="button" class="btn btn-danger" (click)="updateUserStatus(0)"  (click)="c(\'Close click\')">Delete</button>\n      </div>\n     </ng-template>\n    </div>\n  </div>\n  \n  '},Wved:function(e,t){e.exports="[pos], [check] {\n  flex: 0 0 5%;\n  width: 5%;\n  padding-left: 10px;\n}\n\n[width25] {\n  flex: 0 0 25%;\n  width: 25%;\n}\n\n[width17] {\n  flex: 0 0 17%;\n  width: 17%;\n}\n\n[width15] {\n  flex: 0 0 18%;\n  width: 18%;\n}\n\n[width17] {\n  flex: 0 0 17%;\n  width: 17%;\n}\n\n[width20] {\n  flex: 0 0 20%;\n  width: 20%;\n}\n\n[width10] {\n  flex: 0 0 10%;\n  width: 10%;\n}\n\n[checkWidth] {\n  flex: 0 0 10%;\n  width: 10%;\n}\n\n[mat_primary_color] {\n  background: #086A6A;\n}\n\n[img_width] {\n  width: 60px;\n}\n\n[cell-center] {\n  display: flex;\n  text-align: center;\n  justify-content: center;\n}\n\n[action-box] {\n  padding-right: 10px !important;\n  padding-left: 10px !important;\n}\n\n[blocked] {\n  max-width: 90px;\n}\n\n[blocked] span {\n  background: #dc3545;\n  color: #fff;\n  cursor: pointer;\n}\n\nmat-cell.InActive span.badge {\n  background-color: #da3545;\n}\n\n.mat-table__wrapper .mat-table {\n  /*min-width: 100%;*/\n  width: 100%;\n}\n\n.badge-blue {\n  background-color: #008080;\n  color: #fff;\n}\n\n.badge.Inactive {\n  background: #d83646;\n  color: #fff;\n  font-size: 12px;\n}\n\n.badge.Active {\n  background: #099a4e;\n  color: #fff;\n  font-size: 12px;\n}\n\n.trips-btn {\n  background: #008080;\n  color: #fff;\n}\n\n.viewbtn {\n  background: #57dd73;\n  color: #fff;\n}"}}]);